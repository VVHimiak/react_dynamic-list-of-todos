{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["getTodos","fetch","then","response","json","getUser","userId","TodoList","state","todos","query","todoSelectValue","eventHandler","event","target","name","type","value","setState","prevState","map","todo","id","completed","selectTodos","filter","filterTodos","title","toLowerCase","includes","this","props","changeUser","todosSelected","filteredTodos","className","placeholder","onChange","htmlFor","required","classNames","readOnly","checked","onClick","React","Component","CurrentUser","user","selectedUserId","email","phone","clearUser","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb7bfac0.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL_TODOS = `https://mate.academy/students-api/todos`;\n\nexport function getTodos(): Promise<Todo[]> {\n  return fetch(API_URL_TODOS)\n    .then(response => response.json());\n}\n\n// eslint-disable-next-line\nconst API_URL_USERS = `https://mate.academy/students-api/users/`;\n\nexport function getUser(userId: number): Promise<User> {\n  return fetch(API_URL_USERS + userId)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\ntype Props = {\n  getTodos: () => Promise<Todo[]>;\n  selectedUserId: number;\n  changeUser: (id: number) => void;\n};\ntype State = {\n  todos: Todo[];\n  query: string;\n  todoSelectValue: string;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    todos: [],\n    query: '',\n    todoSelectValue: 'all',\n  };\n\n  componentDidMount() {\n    this.props.getTodos()\n      .then(todos => {\n        this.setState({\n          todos,\n        });\n      });\n  }\n\n  eventHandler = (event: React.ChangeEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLSelectElement>) => {\n    const { name, type, value } = event.target;\n\n    if (type === 'text' && name === 'filterByTitle') {\n      this.setState({\n        query: value,\n      });\n    } else if (name === 'todoSelect') {\n      if (this.state.todoSelectValue !== value) {\n        this.setState({\n          todoSelectValue: value,\n        });\n      }\n    } else {\n      this.setState((prevState) => {\n        return ({\n          todos: prevState.todos.map(todo => {\n            if (todo.id === +name) {\n              return ({\n                ...todo,\n                completed: !todo.completed,\n              });\n            }\n\n            return todo;\n          }),\n        });\n      });\n    }\n  };\n\n  selectTodos = (todos: Todo[], value: string): Todo[] => {\n    return (\n      todos.filter(todo => {\n        if (value === 'active') {\n          return todo.completed === false;\n        }\n\n        if (value === 'completed') {\n          return todo.completed === true;\n        }\n\n        return todo;\n      })\n    );\n  };\n\n  filterTodos = (todos: Todo[], query: string): Todo[] => {\n    return (\n      todos.filter(todo => {\n        return (\n          todo.title.toLowerCase().includes(query.toLowerCase())\n        );\n      })\n    );\n  };\n\n  render() {\n    const { todos, query, todoSelectValue } = this.state;\n    const { changeUser } = this.props;\n\n    const todosSelected: Todo[] = this.selectTodos(todos, todoSelectValue);\n\n    const filteredTodos: Todo[] = this.filterTodos(todosSelected, query);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div className=\"d-flex justify-content-end\">\n          <div className=\"\n            form-floating\n            mb-3\n            TodoList__input-container\n            w-50\"\n          >\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"floatingTitle\"\n              placeholder=\"Filter todo items\"\n              name=\"filterByTitle\"\n              value={query}\n              onChange={this.eventHandler}\n            />\n            <label htmlFor=\"floatingTitle\">Filter todo items</label>\n          </div>\n          <div className=\"\n            w-50\n            d-flex\n            justify-content-end\n            align-items-center\n            mb-3\"\n          >\n            <label\n              htmlFor=\"todoSelect\"\n              className=\"todo__user-container w-75\"\n            >\n              <select\n                className=\"form-select\"\n                required\n                id=\"todoSelect\"\n                name=\"todoSelect\"\n                value={todoSelectValue}\n                onChange={this.eventHandler}\n              >\n                <option value=\"all\">show all</option>\n                <option value=\"active\">active (not completed)</option>\n                <option value=\"completed\">completed</option>\n              </select>\n            </label>\n          </div>\n        </div>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => {\n              return (\n                <li\n                  key={todo.id}\n                  className={\n                    classNames(\n                      'TodoList__item',\n                      {\n                        'TodoList__item--checked': todo.completed,\n                        'TodoList__item--unchecked': !todo.completed,\n                      },\n                    )\n                  }\n                >\n                  <label>\n                    <input\n                      name={`${todo.id}`}\n                      type=\"checkbox\"\n                      readOnly\n                      checked={todo.completed}\n                      onChange={this.eventHandler}\n                    />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  <button\n                    className=\"\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    \"\n                    type=\"button\"\n                    onClick={() => changeUser(todo.userId)}\n                  >\n                    {`User #${todo.userId}`}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\n\ntype Props = {\n  selectedUserId: number;\n  getUser: (userId: number) => Promise<User>;\n  clearUser: () => void;\n};\n\ntype State = {\n  user: User | null;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.props.getUser(this.props.selectedUserId)\n      .then(user => {\n        this.setState({\n          user,\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    this.props.getUser(this.props.selectedUserId)\n      .then(user => {\n        if (this.state.user && this.props.selectedUserId !== this.state.user.id) {\n          this.setState({\n            user,\n          });\n        }\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user && user.id}`}</span></h2>\n\n        <h3 className=\"CurrentUser__name\">{user && user.name}</h3>\n        <p className=\"CurrentUser__email\">{user && user.email}</p>\n        <p className=\"CurrentUser__phone\">{user && user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary w-50 mt-4\"\n          onClick={() => this.props.clearUser()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos, getUser } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  changeUser = (id: number) => {\n    if (this.state.selectedUserId !== id) {\n      this.setState({\n        selectedUserId: id,\n      });\n    }\n  };\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            getTodos={getTodos}\n            selectedUserId={selectedUserId}\n            changeUser={this.changeUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                getUser={getUser}\n                clearUser={this.clearUser}\n              />\n            ) : <h3 className=\"text-center\">No user selected</h3>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}